
class VmParser {
	
	new make(){
		
		
	}
	
	 Void parseFile(Str fileName,Str outputFile){
		Str commentOut :="//"	;
		if(fileName.endsWith(".vm")){
			inFile := fileName.toUri.toFile;
			if(!outputFile.endsWith(".asm"))
				outputfile := outputFile +".asm";
			File outFile :=outputFile.toUri.toFile;
			inFile.eachLine |line| { 
						if(line.startsWith("//")  ||  line.isEmpty()) {
							
						}  //Deals with comments	
						else {
							Str command:=""
							if(line.contains("//")){
								index :=line.index("//")
								line = line.split('/',true)[0];
								}
							line.trim();
							convertLineFromVmtoHack(line,outFile);
						
							}
					} 
						
			
		}	
		else{
			echo("Parser can only parse vM files...")
		}
		
	}
	
	Void convertLineFromVmtoHack(Str command,File outFile){
		Str[] words:=command.split();
		switch(words[0]){
			case "add": echo("add")
			case "sub": echo("sub")
			case "neg": echo("neg")
			case "eq":  echo("eq")
			case "gt":  echo("gt")
			case "lt":  echo("lt")
			case "and": echo("and")
			case "or":  echo("or")
			case "not": echo("not")
			case "push":echo("push")
			case "pop": echo("pop")
			default: echo("Command unknown");
			
		}
		
	}
	
	Int 
	
}
